{
	"info": {
		"_postman_id": "e9e955b8-b74c-497c-8b26-b71bef654153",
		"name": "dmvcframework - the guide",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "municipal library v3",
			"item": [
				{
					"name": "Get Customers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"jsonrpc\":\"2.0\",\n\"id\":1234,\n\"method\":\"login\",\n\"params\":[\"user_sender\",\"pwd1\"]\n}"
						},
						"url": {
							"raw": "{{baseurl}}/api/customers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54049d99-47cd-4f8b-b102-9760310b6ed7",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const location = pm.response.headers.find((v) => v.key == \"location\")\r",
									"pm.collectionVariables.set('last_customer_id', location.value.split(\"/\")[3]);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Daniele\",\n    \"lastName\": \"Teti\",\n    \"dateOfBirth\": \"1979-11-04\",\n    \"note\": \"It's a programmer\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/api/customers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6aba07a0-cb2e-40fa-92b1-879462a57a97",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl}}/api/customers/{{last_customer_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"customers",
								"{{last_customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2de72008-c12e-46d3-aefe-e95860ddcefa",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Daniele\",\n    \"lastName\": \"Teti\",\n    \"dateOfBirth\": \"1979-11-04\",\n    \"note\": \"It's a programmer\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/api/customers/{{last_customer_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"customers",
								"{{last_customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Customer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17521d6a-21f2-4fc4-bebd-42332e6bf2b0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl}}/api/customers/{{last_customer_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"customers",
								"{{last_customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer and get id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19c9222e-3c72-48d8-931a-d061939c3452",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const location = pm.response.headers.find((v) => v.key == \"location\")\r",
									"pm.collectionVariables.set('last_customer_id', location.value.split(\"/\")[3]);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Daniele\",\n    \"lastName\": \"Teti\",\n    \"dateOfBirth\": \"1979-11-04\",\n    \"note\": \"It's a programmer\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/api/customers",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8aeef8fd-1a45-475b-b025-6c5b9df44ca7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(pm);    \r",
									"    let last_book_id = pm.response.json()[\"data\"][0].id;\r",
									"    pm.collectionVariables.set(\"last_book_id\",last_book_id);    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/books",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "287b42f9-a257-49e2-87b4-83eb3b5121c7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const location = pm.response.headers.find((v) => v.key == \"location\")\r",
									"pm.collectionVariables.set('last_book_id', location.value.split(\"/\")[3]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n        \"authorId\": 5,\r\n        \"title\": \"TEST BOOK\",\r\n        \"pubYear\": 2020\r\n  }"
						},
						"url": {
							"raw": "{{baseurl}}/api/books",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Book by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c14b228b-9690-4c95-8ee6-ae9fc79ef5e5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/books/{{last_book_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"books",
								"{{last_book_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Lendings By Customer (empty)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c96d332-639c-4854-8c1a-fe5e6693ff44",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Data is empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[\"data\"].length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/lendings/customers/{{last_customer_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"lendings",
								"customers",
								"{{last_customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Lending",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01dad5b1-a685-45aa-b499-7ef024a54629",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const location = pm.response.headers.find((v) => v.key == \"location\")\r",
									"pm.collectionVariables.set('last_lending_id', location.value.split(\"/\")[3]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"bookId\": {{last_book_id}}\n}"
						},
						"url": {
							"raw": "{{baseurl}}/api/lendings/customers/{{last_customer_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"lendings",
								"customers",
								"{{last_customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Lendings By Customer (1 book)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b1fc5bb-2412-4f07-8fd7-6fb9993fa8c7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"There is one book\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[\"data\"].length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/lendings/customers/{{last_customer_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"lendings",
								"customers",
								"{{last_customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Lendings By Book",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b8b6a597-2ac8-4a5b-9355-d1fc969cde11",
								"exec": [
									"console.log(\"Book: \" + pm.collectionVariables.get(\"last_book_id\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/lendings/books/{{last_book_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"lendings",
								"books",
								"{{last_book_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e008da73-9112-40a0-9b4f-42d2ebfc8970",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.collectionVariables.set('last_author_id', pm.response.json()[\"data\"][0].id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/authors",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books By Author",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/authors/{{last_author_id}}/books",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"authors",
								"{{last_author_id}}",
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Authors + filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aeb150d-c430-422d-95d4-1bee8dc9e340",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Just one author\", function () {\r",
									"    pm.expect(pm.response.json()[\"data\"].length).to.be.equal(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/authors?q=ge(dateOfBirth,\"1850-01-01\")",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"authors"
							],
							"query": [
								{
									"key": "q",
									"value": "ge(dateOfBirth,\"1850-01-01\")"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Lendings",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/lendings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"lendings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Lendings - status = open",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/lendings?status=open",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"lendings"
							],
							"query": [
								{
									"key": "status",
									"value": "open"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Lendings - status = closed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/lendings?status=closed",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"lendings"
							],
							"query": [
								{
									"key": "status",
									"value": "closed"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Terminate a Lending",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c70c8c4-d249-4910-ba87-02ebc2366fb0",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/lendings/terminated/{{last_lending_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"lendings",
								"terminated",
								"{{last_lending_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b7a139dd-f434-47d3-a42b-56f29f211cc3",
								"exec": [
									"pm.collectionVariables.set(\"random_email\", \r",
									"    \"daniele\" + parseInt(Math.random(20) * 100000) + \"@library.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "22413cfa-f907-4d1f-bb17-6cbcfc3307b4",
								"exec": [
									"const location = pm.response.headers.find((v) => v.key == \"location\")\r",
									"pm.collectionVariables.set(\"last_created_user_id\", location.value.split(\"/\")[3]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{random_email}}\",\n  \"pwd\":\"a\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/api/users",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/users",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users + filter",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/users?q=contains(email,\"dan\")",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "q",
									"value": "contains(email,\"dan\")"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"updated_{{random_email}}\"\r\n}"
						},
						"url": {
							"raw": "{{baseurl}}/api/users/{{last_created_user_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"users",
								"{{last_created_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/users/{{last_created_user_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"users",
								"{{last_created_user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "municipal library v4",
			"item": [
				{
					"name": "Login with Daniele",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ede4196-9bcd-4df0-9dd6-c0d445ae05fa",
								"exec": [
									"pm.collectionVariables.set(\"random_email\", \r",
									"    \"daniele\" + parseInt(Math.random(20) * 100000) + \"@library.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "378c8a92-aa96-4d8b-8066-67b192edeac6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"token\", pm.response.json()[\"token\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "daniele@library.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3e33a585-b8fc-4db4-90dc-18ed16e0f784",
								"exec": [
									"pm.collectionVariables.set(\"random_email\", \r",
									"    \"daniele\" + parseInt(Math.random(20) * 100000) + \"@library.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a7c23646-9252-4f60-a8f2-ec660464568f",
								"exec": [
									"const location = pm.response.headers.find((v) => v.key == \"location\")\r",
									"pm.collectionVariables.set(\"last_created_user_id\", location.value.split(\"/\")[3]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{random_email}}\",\n  \"pwd\":\"a\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/api/users",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "30aa9a0e-570a-4446-843a-080a12d33788",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "659dfd0e-3423-4a8d-bbd8-0f47f4e92037",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"token\", pm.response.json()[\"token\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{random_email}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change current user password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0eb95011-8f26-4484-84b8-57eb0af999a5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "27f90d97-688c-4754-9e2b-1b1914f2e0e2",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pwd\":\"b\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/api/users/me/password",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"users",
								"me",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d29db3d2-d939-4f32-9cb6-f33bf5514434",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dafda7a9-5b46-4fca-806b-8042725c07f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"token\", pm.response.json()[\"token\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "b",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{random_email}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Try to delete myself",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/users/{{last_created_user_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"users",
								"{{last_created_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with Daniele",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b546e6e6-892c-415b-9834-c802401a0258",
								"exec": [
									"pm.collectionVariables.set(\"random_email\", \r",
									"    \"daniele\" + parseInt(Math.random(20) * 100000) + \"@library.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0e541d08-85fe-46bf-981a-0d78b8163413",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"token\", pm.response.json()[\"token\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "daniele@library.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the new user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl}}/api/users/{{last_created_user_id}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"users",
								"{{last_created_user_id}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f577aefe-d870-4c48-9b59-d59d7cb46717",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a4959168-091a-4aad-93b8-21fc77d3b167",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "jsonrpc",
			"item": [
				{
					"name": "Subtract",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\":\"2.0\",\r\n    \"id\": 1234,\r\n    \"method\":\"subtract\",\r\n    \"params\": {\"par1\": 10, \"par2\": 3}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/myobject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"myobject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Subtract with error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\":\"2.0\",\r\n    \"id\": 1234,\r\n    \"method\":\"subtract\",\r\n    \"params\": {\"par1\": 10, \"par2\": 3}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/myobject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"myobject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\":\"2.0\",\r\n    \"method\":\"Update\",\r\n    \"params\": {\"par1\": \"Hello There\"}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/myobject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"myobject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update with error",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\":\"2.0\",\r\n    \"method\":\"Update\",\r\n    \"params\": {\"par1\": \"Hello There\"}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/myobject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"myobject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Complex Merge JSON",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\":\"2.0\",    \r\n    \"method\":\"MergeData\",\r\n    \"id\":1234,\r\n    \"params\": {\"data1\": {\"firstName\": \"Daniele\"}, \"data2\": {\"lastName\":\"Teti\"}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/mycomplexobject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"mycomplexobject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Dataset",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\":\"2.0\",    \r\n    \"method\":\"MergeData\",\r\n    \"id\":1234,\r\n    \"params\": {\"data1\": {\"firstName\": \"Daniele\"}, \"data2\": {\"lastName\":\"Teti\"}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/mycomplexobject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"mycomplexobject"
							]
						}
					},
					"response": []
				},
				{
					"name": "child1method1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\":\"2.0\",    \r\n    \"method\":\"MergeData\",\r\n    \"id\":1234,\r\n    \"params\": {\"data1\": {\"firstName\": \"Daniele\"}, \"data2\": {\"lastName\":\"Teti\"}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/mycomplexobject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"mycomplexobject"
							]
						}
					},
					"response": []
				},
				{
					"name": "child1 parent method",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jsonrpc\":\"2.0\",    \r\n    \"method\":\"ParentMethod1\",\r\n    \"id\":1234\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/child1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"child1"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b733d867-360b-4b56-bc08-3b1598c459c0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3ed74b8d-b3d7-41f1-89b0-c20c661029b2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "705cc49f-06e5-4c79-bfd7-cee08ff5e330",
			"key": "baseurl",
			"value": "http://localhost:8080"
		},
		{
			"id": "f8664602-a7bc-490a-8534-7585b3512bf9",
			"key": "last_book_id",
			"value": ""
		},
		{
			"id": "2eec0373-2d7e-4f95-9a9a-a08f6ac9984f",
			"key": "last_customer_id",
			"value": ""
		},
		{
			"id": "56dd7649-c3c8-472c-94bc-46bc15d0264e",
			"key": "last_author_id",
			"value": ""
		},
		{
			"id": "11b470e9-2cf7-4638-99a9-0c1a181b0323",
			"key": "random_email",
			"value": ""
		},
		{
			"id": "5e6cfe76-8c8e-454f-bd06-280c75ea88cb",
			"key": "last_created_user_id",
			"value": ""
		},
		{
			"id": "3289e4dc-2caf-4c54-a883-a7ee8c6ed7ce",
			"key": "last_lending_id",
			"value": ""
		},
		{
			"id": "a20fc479-7321-462b-96f6-d5aabd69fdf1",
			"key": "token",
			"value": ""
		}
	]
}